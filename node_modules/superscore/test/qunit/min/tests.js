(function(){
  module("Request");
  asyncTest("empty request", function(){
    _.request("").then(function(d){
      equal(d, '', "empty return");
      start();
    });
  });
  test("get and post expost", function(){
    ok(_.request.get, "_.request.get is available");
    ok(_.request.post, "_.request.post is available");
  });
}).call(this);

/*global QUnit:false, module:false, test:false, asyncTest:false, expect:false*/
(function(){
  /*global start:false, stop:false ok:false, equal:false, notEqual:false, deepEqual:false*/
  /*global notDeepEqual:false, strictEqual:false, notStrictEqual:false, raises:false*/
  /*
  	======== A Handy Little QUnit Reference ========
  	http:#docs.jquery.com/QUnit
  
  	Test methods:
  		expect numAssertions
  		stop increment
  		start decrement
  	Test assertions:
  		ok value, [message]
  		equal actual, expected, [message]
  		notEqual actual, expected, [message]
  		deepEqual actual, expected, [message]
  		notDeepEqual actual, expected, [message]
  		strictEqual actual, expected, [message]
  		notStrictEqual actual, expected, [message]
  		raises block, [expected], [message]
  */
  test('is awesome', function(){
    expect(1);
    ok(_.UUID, 'Can UUID');
  });
}).call(this);
